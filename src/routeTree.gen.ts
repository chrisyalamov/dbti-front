/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TermsImport } from './routes/terms'
import { Route as SignupImport } from './routes/signup'
import { Route as LandingImport } from './routes/landing'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as MarketingRouteImport } from './routes/_marketing/route'
import { Route as MarketingIndexImport } from './routes/_marketing/index'
import { Route as AuthNewAccountImport } from './routes/auth/newAccount'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthConfirmAccountImport } from './routes/auth/confirmAccount'
import { Route as AuthAuthOptionsImport } from './routes/auth/authOptions'
import { Route as AuthAuthImport } from './routes/auth/_auth'
import { Route as AppNewOrgImport } from './routes/app/newOrg'
import { Route as MarketingPricingImport } from './routes/_marketing/pricing'
import { Route as AppOrgIdRouteImport } from './routes/app/$orgId/route'
import { Route as AppOrgIdIndexImport } from './routes/app/$orgId/index'
import { Route as AuthAuthOrgSelectorImport } from './routes/auth/_auth.orgSelector'
import { Route as AppOrgIdSettingsImport } from './routes/app/$orgId/settings'
import { Route as AppOrgIdUsersIndexImport } from './routes/app/$orgId/users/index'
import { Route as AppOrgIdLicensingIndexImport } from './routes/app/$orgId/licensing/index'
import { Route as AppOrgIdEventsIndexImport } from './routes/app/$orgId/events/index'
import { Route as AppOrgIdBillingIndexImport } from './routes/app/$orgId/billing/index'
import { Route as AppOrgIdUsersUseridImport } from './routes/app/$orgId/users/$userid'
import { Route as AppOrgIdLicensingSuccessImport } from './routes/app/$orgId/licensing/success'
import { Route as AppOrgIdLicensingPurchaseImport } from './routes/app/$orgId/licensing/purchase'
import { Route as AppOrgIdLicensingEnrolmentsImport } from './routes/app/$orgId/licensing/enrolments'
import { Route as AppOrgIdLicensingCancelImport } from './routes/app/$orgId/licensing/cancel'
import { Route as AppOrgIdLicensingPurchaseIndexImport } from './routes/app/$orgId/licensing/purchase.index'
import { Route as AppOrgIdEventsEventIdIndexImport } from './routes/app/$orgId/events/$eventId.index'
import { Route as AppOrgIdLicensingLicenseLicenseIdImport } from './routes/app/$orgId/licensing/license.$licenseId'
import { Route as AppOrgIdBillingPoPoIdImport } from './routes/app/$orgId/billing/po.$poId'
import { Route as AppOrgIdLicensingPurchaseSkuSkuIdImport } from './routes/app/$orgId/licensing/purchase.sku.$skuId'
import { Route as AppOrgIdEventsEventIdAttendeesAttendeeIdImport } from './routes/app/$orgId/events/$eventId.attendees.$attendeeId'
import { Route as AppOrgIdEventsEventIdAttendeesAttendeeIdIndexImport } from './routes/app/$orgId/events/$eventId.attendees.$attendeeId.index'
import { Route as AppOrgIdEventsEventIdAttendeesAttendeeIdAssignImport } from './routes/app/$orgId/events/$eventId.attendees.$attendeeId.assign'

// Create/Update Routes

const TermsRoute = TermsImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LandingRoute = LandingImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRouteRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const MarketingRouteRoute = MarketingRouteImport.update({
  id: '/_marketing',
  getParentRoute: () => rootRoute,
} as any)

const MarketingIndexRoute = MarketingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MarketingRouteRoute,
} as any)

const AuthNewAccountRoute = AuthNewAccountImport.update({
  id: '/newAccount',
  path: '/newAccount',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthConfirmAccountRoute = AuthConfirmAccountImport.update({
  id: '/confirmAccount',
  path: '/confirmAccount',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthAuthOptionsRoute = AuthAuthOptionsImport.update({
  id: '/authOptions',
  path: '/authOptions',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthAuthRoute = AuthAuthImport.update({
  id: '/_auth',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AppNewOrgRoute = AppNewOrgImport.update({
  id: '/newOrg',
  path: '/newOrg',
  getParentRoute: () => AppRouteRoute,
} as any)

const MarketingPricingRoute = MarketingPricingImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => MarketingRouteRoute,
} as any)

const AppOrgIdRouteRoute = AppOrgIdRouteImport.update({
  id: '/$orgId',
  path: '/$orgId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppOrgIdIndexRoute = AppOrgIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppOrgIdRouteRoute,
} as any)

const AuthAuthOrgSelectorRoute = AuthAuthOrgSelectorImport.update({
  id: '/orgSelector',
  path: '/orgSelector',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AppOrgIdSettingsRoute = AppOrgIdSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppOrgIdRouteRoute,
} as any)

const AppOrgIdUsersIndexRoute = AppOrgIdUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AppOrgIdRouteRoute,
} as any)

const AppOrgIdLicensingIndexRoute = AppOrgIdLicensingIndexImport.update({
  id: '/licensing/',
  path: '/licensing/',
  getParentRoute: () => AppOrgIdRouteRoute,
} as any)

const AppOrgIdEventsIndexRoute = AppOrgIdEventsIndexImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => AppOrgIdRouteRoute,
} as any)

const AppOrgIdBillingIndexRoute = AppOrgIdBillingIndexImport.update({
  id: '/billing/',
  path: '/billing/',
  getParentRoute: () => AppOrgIdRouteRoute,
} as any)

const AppOrgIdUsersUseridRoute = AppOrgIdUsersUseridImport.update({
  id: '/users/$userid',
  path: '/users/$userid',
  getParentRoute: () => AppOrgIdRouteRoute,
} as any)

const AppOrgIdLicensingSuccessRoute = AppOrgIdLicensingSuccessImport.update({
  id: '/licensing/success',
  path: '/licensing/success',
  getParentRoute: () => AppOrgIdRouteRoute,
} as any)

const AppOrgIdLicensingPurchaseRoute = AppOrgIdLicensingPurchaseImport.update({
  id: '/licensing/purchase',
  path: '/licensing/purchase',
  getParentRoute: () => AppOrgIdRouteRoute,
} as any)

const AppOrgIdLicensingEnrolmentsRoute =
  AppOrgIdLicensingEnrolmentsImport.update({
    id: '/licensing/enrolments',
    path: '/licensing/enrolments',
    getParentRoute: () => AppOrgIdRouteRoute,
  } as any)

const AppOrgIdLicensingCancelRoute = AppOrgIdLicensingCancelImport.update({
  id: '/licensing/cancel',
  path: '/licensing/cancel',
  getParentRoute: () => AppOrgIdRouteRoute,
} as any)

const AppOrgIdLicensingPurchaseIndexRoute =
  AppOrgIdLicensingPurchaseIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppOrgIdLicensingPurchaseRoute,
  } as any)

const AppOrgIdEventsEventIdIndexRoute = AppOrgIdEventsEventIdIndexImport.update(
  {
    id: '/events/$eventId/',
    path: '/events/$eventId/',
    getParentRoute: () => AppOrgIdRouteRoute,
  } as any,
)

const AppOrgIdLicensingLicenseLicenseIdRoute =
  AppOrgIdLicensingLicenseLicenseIdImport.update({
    id: '/licensing/license/$licenseId',
    path: '/licensing/license/$licenseId',
    getParentRoute: () => AppOrgIdRouteRoute,
  } as any)

const AppOrgIdBillingPoPoIdRoute = AppOrgIdBillingPoPoIdImport.update({
  id: '/billing/po/$poId',
  path: '/billing/po/$poId',
  getParentRoute: () => AppOrgIdRouteRoute,
} as any)

const AppOrgIdLicensingPurchaseSkuSkuIdRoute =
  AppOrgIdLicensingPurchaseSkuSkuIdImport.update({
    id: '/sku/$skuId',
    path: '/sku/$skuId',
    getParentRoute: () => AppOrgIdLicensingPurchaseRoute,
  } as any)

const AppOrgIdEventsEventIdAttendeesAttendeeIdRoute =
  AppOrgIdEventsEventIdAttendeesAttendeeIdImport.update({
    id: '/events/$eventId/attendees/$attendeeId',
    path: '/events/$eventId/attendees/$attendeeId',
    getParentRoute: () => AppOrgIdRouteRoute,
  } as any)

const AppOrgIdEventsEventIdAttendeesAttendeeIdIndexRoute =
  AppOrgIdEventsEventIdAttendeesAttendeeIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppOrgIdEventsEventIdAttendeesAttendeeIdRoute,
  } as any)

const AppOrgIdEventsEventIdAttendeesAttendeeIdAssignRoute =
  AppOrgIdEventsEventIdAttendeesAttendeeIdAssignImport.update({
    id: '/assign',
    path: '/assign',
    getParentRoute: () => AppOrgIdEventsEventIdAttendeesAttendeeIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_marketing': {
      id: '/_marketing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MarketingRouteImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/landing': {
      id: '/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsImport
      parentRoute: typeof rootRoute
    }
    '/app/$orgId': {
      id: '/app/$orgId'
      path: '/$orgId'
      fullPath: '/app/$orgId'
      preLoaderRoute: typeof AppOrgIdRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_marketing/pricing': {
      id: '/_marketing/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof MarketingPricingImport
      parentRoute: typeof MarketingRouteImport
    }
    '/app/newOrg': {
      id: '/app/newOrg'
      path: '/newOrg'
      fullPath: '/app/newOrg'
      preLoaderRoute: typeof AppNewOrgImport
      parentRoute: typeof AppRouteImport
    }
    '/auth/_auth': {
      id: '/auth/_auth'
      path: ''
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/authOptions': {
      id: '/auth/authOptions'
      path: '/authOptions'
      fullPath: '/auth/authOptions'
      preLoaderRoute: typeof AuthAuthOptionsImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/confirmAccount': {
      id: '/auth/confirmAccount'
      path: '/confirmAccount'
      fullPath: '/auth/confirmAccount'
      preLoaderRoute: typeof AuthConfirmAccountImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/newAccount': {
      id: '/auth/newAccount'
      path: '/newAccount'
      fullPath: '/auth/newAccount'
      preLoaderRoute: typeof AuthNewAccountImport
      parentRoute: typeof AuthRouteImport
    }
    '/_marketing/': {
      id: '/_marketing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MarketingIndexImport
      parentRoute: typeof MarketingRouteImport
    }
    '/app/$orgId/settings': {
      id: '/app/$orgId/settings'
      path: '/settings'
      fullPath: '/app/$orgId/settings'
      preLoaderRoute: typeof AppOrgIdSettingsImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/auth/_auth/orgSelector': {
      id: '/auth/_auth/orgSelector'
      path: '/orgSelector'
      fullPath: '/auth/orgSelector'
      preLoaderRoute: typeof AuthAuthOrgSelectorImport
      parentRoute: typeof AuthAuthImport
    }
    '/app/$orgId/': {
      id: '/app/$orgId/'
      path: '/'
      fullPath: '/app/$orgId/'
      preLoaderRoute: typeof AppOrgIdIndexImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/licensing/cancel': {
      id: '/app/$orgId/licensing/cancel'
      path: '/licensing/cancel'
      fullPath: '/app/$orgId/licensing/cancel'
      preLoaderRoute: typeof AppOrgIdLicensingCancelImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/licensing/enrolments': {
      id: '/app/$orgId/licensing/enrolments'
      path: '/licensing/enrolments'
      fullPath: '/app/$orgId/licensing/enrolments'
      preLoaderRoute: typeof AppOrgIdLicensingEnrolmentsImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/licensing/purchase': {
      id: '/app/$orgId/licensing/purchase'
      path: '/licensing/purchase'
      fullPath: '/app/$orgId/licensing/purchase'
      preLoaderRoute: typeof AppOrgIdLicensingPurchaseImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/licensing/success': {
      id: '/app/$orgId/licensing/success'
      path: '/licensing/success'
      fullPath: '/app/$orgId/licensing/success'
      preLoaderRoute: typeof AppOrgIdLicensingSuccessImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/users/$userid': {
      id: '/app/$orgId/users/$userid'
      path: '/users/$userid'
      fullPath: '/app/$orgId/users/$userid'
      preLoaderRoute: typeof AppOrgIdUsersUseridImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/billing/': {
      id: '/app/$orgId/billing/'
      path: '/billing'
      fullPath: '/app/$orgId/billing'
      preLoaderRoute: typeof AppOrgIdBillingIndexImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/events/': {
      id: '/app/$orgId/events/'
      path: '/events'
      fullPath: '/app/$orgId/events'
      preLoaderRoute: typeof AppOrgIdEventsIndexImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/licensing/': {
      id: '/app/$orgId/licensing/'
      path: '/licensing'
      fullPath: '/app/$orgId/licensing'
      preLoaderRoute: typeof AppOrgIdLicensingIndexImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/users/': {
      id: '/app/$orgId/users/'
      path: '/users'
      fullPath: '/app/$orgId/users'
      preLoaderRoute: typeof AppOrgIdUsersIndexImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/billing/po/$poId': {
      id: '/app/$orgId/billing/po/$poId'
      path: '/billing/po/$poId'
      fullPath: '/app/$orgId/billing/po/$poId'
      preLoaderRoute: typeof AppOrgIdBillingPoPoIdImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/licensing/license/$licenseId': {
      id: '/app/$orgId/licensing/license/$licenseId'
      path: '/licensing/license/$licenseId'
      fullPath: '/app/$orgId/licensing/license/$licenseId'
      preLoaderRoute: typeof AppOrgIdLicensingLicenseLicenseIdImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/events/$eventId/': {
      id: '/app/$orgId/events/$eventId/'
      path: '/events/$eventId'
      fullPath: '/app/$orgId/events/$eventId'
      preLoaderRoute: typeof AppOrgIdEventsEventIdIndexImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/licensing/purchase/': {
      id: '/app/$orgId/licensing/purchase/'
      path: '/'
      fullPath: '/app/$orgId/licensing/purchase/'
      preLoaderRoute: typeof AppOrgIdLicensingPurchaseIndexImport
      parentRoute: typeof AppOrgIdLicensingPurchaseImport
    }
    '/app/$orgId/events/$eventId/attendees/$attendeeId': {
      id: '/app/$orgId/events/$eventId/attendees/$attendeeId'
      path: '/events/$eventId/attendees/$attendeeId'
      fullPath: '/app/$orgId/events/$eventId/attendees/$attendeeId'
      preLoaderRoute: typeof AppOrgIdEventsEventIdAttendeesAttendeeIdImport
      parentRoute: typeof AppOrgIdRouteImport
    }
    '/app/$orgId/licensing/purchase/sku/$skuId': {
      id: '/app/$orgId/licensing/purchase/sku/$skuId'
      path: '/sku/$skuId'
      fullPath: '/app/$orgId/licensing/purchase/sku/$skuId'
      preLoaderRoute: typeof AppOrgIdLicensingPurchaseSkuSkuIdImport
      parentRoute: typeof AppOrgIdLicensingPurchaseImport
    }
    '/app/$orgId/events/$eventId/attendees/$attendeeId/assign': {
      id: '/app/$orgId/events/$eventId/attendees/$attendeeId/assign'
      path: '/assign'
      fullPath: '/app/$orgId/events/$eventId/attendees/$attendeeId/assign'
      preLoaderRoute: typeof AppOrgIdEventsEventIdAttendeesAttendeeIdAssignImport
      parentRoute: typeof AppOrgIdEventsEventIdAttendeesAttendeeIdImport
    }
    '/app/$orgId/events/$eventId/attendees/$attendeeId/': {
      id: '/app/$orgId/events/$eventId/attendees/$attendeeId/'
      path: '/'
      fullPath: '/app/$orgId/events/$eventId/attendees/$attendeeId/'
      preLoaderRoute: typeof AppOrgIdEventsEventIdAttendeesAttendeeIdIndexImport
      parentRoute: typeof AppOrgIdEventsEventIdAttendeesAttendeeIdImport
    }
  }
}

// Create and export the route tree

interface MarketingRouteRouteChildren {
  MarketingPricingRoute: typeof MarketingPricingRoute
  MarketingIndexRoute: typeof MarketingIndexRoute
}

const MarketingRouteRouteChildren: MarketingRouteRouteChildren = {
  MarketingPricingRoute: MarketingPricingRoute,
  MarketingIndexRoute: MarketingIndexRoute,
}

const MarketingRouteRouteWithChildren = MarketingRouteRoute._addFileChildren(
  MarketingRouteRouteChildren,
)

interface AppOrgIdLicensingPurchaseRouteChildren {
  AppOrgIdLicensingPurchaseIndexRoute: typeof AppOrgIdLicensingPurchaseIndexRoute
  AppOrgIdLicensingPurchaseSkuSkuIdRoute: typeof AppOrgIdLicensingPurchaseSkuSkuIdRoute
}

const AppOrgIdLicensingPurchaseRouteChildren: AppOrgIdLicensingPurchaseRouteChildren =
  {
    AppOrgIdLicensingPurchaseIndexRoute: AppOrgIdLicensingPurchaseIndexRoute,
    AppOrgIdLicensingPurchaseSkuSkuIdRoute:
      AppOrgIdLicensingPurchaseSkuSkuIdRoute,
  }

const AppOrgIdLicensingPurchaseRouteWithChildren =
  AppOrgIdLicensingPurchaseRoute._addFileChildren(
    AppOrgIdLicensingPurchaseRouteChildren,
  )

interface AppOrgIdEventsEventIdAttendeesAttendeeIdRouteChildren {
  AppOrgIdEventsEventIdAttendeesAttendeeIdAssignRoute: typeof AppOrgIdEventsEventIdAttendeesAttendeeIdAssignRoute
  AppOrgIdEventsEventIdAttendeesAttendeeIdIndexRoute: typeof AppOrgIdEventsEventIdAttendeesAttendeeIdIndexRoute
}

const AppOrgIdEventsEventIdAttendeesAttendeeIdRouteChildren: AppOrgIdEventsEventIdAttendeesAttendeeIdRouteChildren =
  {
    AppOrgIdEventsEventIdAttendeesAttendeeIdAssignRoute:
      AppOrgIdEventsEventIdAttendeesAttendeeIdAssignRoute,
    AppOrgIdEventsEventIdAttendeesAttendeeIdIndexRoute:
      AppOrgIdEventsEventIdAttendeesAttendeeIdIndexRoute,
  }

const AppOrgIdEventsEventIdAttendeesAttendeeIdRouteWithChildren =
  AppOrgIdEventsEventIdAttendeesAttendeeIdRoute._addFileChildren(
    AppOrgIdEventsEventIdAttendeesAttendeeIdRouteChildren,
  )

interface AppOrgIdRouteRouteChildren {
  AppOrgIdSettingsRoute: typeof AppOrgIdSettingsRoute
  AppOrgIdIndexRoute: typeof AppOrgIdIndexRoute
  AppOrgIdLicensingCancelRoute: typeof AppOrgIdLicensingCancelRoute
  AppOrgIdLicensingEnrolmentsRoute: typeof AppOrgIdLicensingEnrolmentsRoute
  AppOrgIdLicensingPurchaseRoute: typeof AppOrgIdLicensingPurchaseRouteWithChildren
  AppOrgIdLicensingSuccessRoute: typeof AppOrgIdLicensingSuccessRoute
  AppOrgIdUsersUseridRoute: typeof AppOrgIdUsersUseridRoute
  AppOrgIdBillingIndexRoute: typeof AppOrgIdBillingIndexRoute
  AppOrgIdEventsIndexRoute: typeof AppOrgIdEventsIndexRoute
  AppOrgIdLicensingIndexRoute: typeof AppOrgIdLicensingIndexRoute
  AppOrgIdUsersIndexRoute: typeof AppOrgIdUsersIndexRoute
  AppOrgIdBillingPoPoIdRoute: typeof AppOrgIdBillingPoPoIdRoute
  AppOrgIdLicensingLicenseLicenseIdRoute: typeof AppOrgIdLicensingLicenseLicenseIdRoute
  AppOrgIdEventsEventIdIndexRoute: typeof AppOrgIdEventsEventIdIndexRoute
  AppOrgIdEventsEventIdAttendeesAttendeeIdRoute: typeof AppOrgIdEventsEventIdAttendeesAttendeeIdRouteWithChildren
}

const AppOrgIdRouteRouteChildren: AppOrgIdRouteRouteChildren = {
  AppOrgIdSettingsRoute: AppOrgIdSettingsRoute,
  AppOrgIdIndexRoute: AppOrgIdIndexRoute,
  AppOrgIdLicensingCancelRoute: AppOrgIdLicensingCancelRoute,
  AppOrgIdLicensingEnrolmentsRoute: AppOrgIdLicensingEnrolmentsRoute,
  AppOrgIdLicensingPurchaseRoute: AppOrgIdLicensingPurchaseRouteWithChildren,
  AppOrgIdLicensingSuccessRoute: AppOrgIdLicensingSuccessRoute,
  AppOrgIdUsersUseridRoute: AppOrgIdUsersUseridRoute,
  AppOrgIdBillingIndexRoute: AppOrgIdBillingIndexRoute,
  AppOrgIdEventsIndexRoute: AppOrgIdEventsIndexRoute,
  AppOrgIdLicensingIndexRoute: AppOrgIdLicensingIndexRoute,
  AppOrgIdUsersIndexRoute: AppOrgIdUsersIndexRoute,
  AppOrgIdBillingPoPoIdRoute: AppOrgIdBillingPoPoIdRoute,
  AppOrgIdLicensingLicenseLicenseIdRoute:
    AppOrgIdLicensingLicenseLicenseIdRoute,
  AppOrgIdEventsEventIdIndexRoute: AppOrgIdEventsEventIdIndexRoute,
  AppOrgIdEventsEventIdAttendeesAttendeeIdRoute:
    AppOrgIdEventsEventIdAttendeesAttendeeIdRouteWithChildren,
}

const AppOrgIdRouteRouteWithChildren = AppOrgIdRouteRoute._addFileChildren(
  AppOrgIdRouteRouteChildren,
)

interface AppRouteRouteChildren {
  AppOrgIdRouteRoute: typeof AppOrgIdRouteRouteWithChildren
  AppNewOrgRoute: typeof AppNewOrgRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppOrgIdRouteRoute: AppOrgIdRouteRouteWithChildren,
  AppNewOrgRoute: AppNewOrgRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface AuthAuthRouteChildren {
  AuthAuthOrgSelectorRoute: typeof AuthAuthOrgSelectorRoute
}

const AuthAuthRouteChildren: AuthAuthRouteChildren = {
  AuthAuthOrgSelectorRoute: AuthAuthOrgSelectorRoute,
}

const AuthAuthRouteWithChildren = AuthAuthRoute._addFileChildren(
  AuthAuthRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthAuthRoute: typeof AuthAuthRouteWithChildren
  AuthAuthOptionsRoute: typeof AuthAuthOptionsRoute
  AuthConfirmAccountRoute: typeof AuthConfirmAccountRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthNewAccountRoute: typeof AuthNewAccountRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthAuthRoute: AuthAuthRouteWithChildren,
  AuthAuthOptionsRoute: AuthAuthOptionsRoute,
  AuthConfirmAccountRoute: AuthConfirmAccountRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthNewAccountRoute: AuthNewAccountRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof MarketingRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/auth': typeof AuthAuthRouteWithChildren
  '/landing': typeof LandingRoute
  '/signup': typeof SignupRoute
  '/terms': typeof TermsRoute
  '/app/$orgId': typeof AppOrgIdRouteRouteWithChildren
  '/pricing': typeof MarketingPricingRoute
  '/app/newOrg': typeof AppNewOrgRoute
  '/auth/authOptions': typeof AuthAuthOptionsRoute
  '/auth/confirmAccount': typeof AuthConfirmAccountRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/newAccount': typeof AuthNewAccountRoute
  '/': typeof MarketingIndexRoute
  '/app/$orgId/settings': typeof AppOrgIdSettingsRoute
  '/auth/orgSelector': typeof AuthAuthOrgSelectorRoute
  '/app/$orgId/': typeof AppOrgIdIndexRoute
  '/app/$orgId/licensing/cancel': typeof AppOrgIdLicensingCancelRoute
  '/app/$orgId/licensing/enrolments': typeof AppOrgIdLicensingEnrolmentsRoute
  '/app/$orgId/licensing/purchase': typeof AppOrgIdLicensingPurchaseRouteWithChildren
  '/app/$orgId/licensing/success': typeof AppOrgIdLicensingSuccessRoute
  '/app/$orgId/users/$userid': typeof AppOrgIdUsersUseridRoute
  '/app/$orgId/billing': typeof AppOrgIdBillingIndexRoute
  '/app/$orgId/events': typeof AppOrgIdEventsIndexRoute
  '/app/$orgId/licensing': typeof AppOrgIdLicensingIndexRoute
  '/app/$orgId/users': typeof AppOrgIdUsersIndexRoute
  '/app/$orgId/billing/po/$poId': typeof AppOrgIdBillingPoPoIdRoute
  '/app/$orgId/licensing/license/$licenseId': typeof AppOrgIdLicensingLicenseLicenseIdRoute
  '/app/$orgId/events/$eventId': typeof AppOrgIdEventsEventIdIndexRoute
  '/app/$orgId/licensing/purchase/': typeof AppOrgIdLicensingPurchaseIndexRoute
  '/app/$orgId/events/$eventId/attendees/$attendeeId': typeof AppOrgIdEventsEventIdAttendeesAttendeeIdRouteWithChildren
  '/app/$orgId/licensing/purchase/sku/$skuId': typeof AppOrgIdLicensingPurchaseSkuSkuIdRoute
  '/app/$orgId/events/$eventId/attendees/$attendeeId/assign': typeof AppOrgIdEventsEventIdAttendeesAttendeeIdAssignRoute
  '/app/$orgId/events/$eventId/attendees/$attendeeId/': typeof AppOrgIdEventsEventIdAttendeesAttendeeIdIndexRoute
}

export interface FileRoutesByTo {
  '/app': typeof AppRouteRouteWithChildren
  '/auth': typeof AuthAuthRouteWithChildren
  '/landing': typeof LandingRoute
  '/signup': typeof SignupRoute
  '/terms': typeof TermsRoute
  '/pricing': typeof MarketingPricingRoute
  '/app/newOrg': typeof AppNewOrgRoute
  '/auth/authOptions': typeof AuthAuthOptionsRoute
  '/auth/confirmAccount': typeof AuthConfirmAccountRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/newAccount': typeof AuthNewAccountRoute
  '/': typeof MarketingIndexRoute
  '/app/$orgId/settings': typeof AppOrgIdSettingsRoute
  '/auth/orgSelector': typeof AuthAuthOrgSelectorRoute
  '/app/$orgId': typeof AppOrgIdIndexRoute
  '/app/$orgId/licensing/cancel': typeof AppOrgIdLicensingCancelRoute
  '/app/$orgId/licensing/enrolments': typeof AppOrgIdLicensingEnrolmentsRoute
  '/app/$orgId/licensing/success': typeof AppOrgIdLicensingSuccessRoute
  '/app/$orgId/users/$userid': typeof AppOrgIdUsersUseridRoute
  '/app/$orgId/billing': typeof AppOrgIdBillingIndexRoute
  '/app/$orgId/events': typeof AppOrgIdEventsIndexRoute
  '/app/$orgId/licensing': typeof AppOrgIdLicensingIndexRoute
  '/app/$orgId/users': typeof AppOrgIdUsersIndexRoute
  '/app/$orgId/billing/po/$poId': typeof AppOrgIdBillingPoPoIdRoute
  '/app/$orgId/licensing/license/$licenseId': typeof AppOrgIdLicensingLicenseLicenseIdRoute
  '/app/$orgId/events/$eventId': typeof AppOrgIdEventsEventIdIndexRoute
  '/app/$orgId/licensing/purchase': typeof AppOrgIdLicensingPurchaseIndexRoute
  '/app/$orgId/licensing/purchase/sku/$skuId': typeof AppOrgIdLicensingPurchaseSkuSkuIdRoute
  '/app/$orgId/events/$eventId/attendees/$attendeeId/assign': typeof AppOrgIdEventsEventIdAttendeesAttendeeIdAssignRoute
  '/app/$orgId/events/$eventId/attendees/$attendeeId': typeof AppOrgIdEventsEventIdAttendeesAttendeeIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_marketing': typeof MarketingRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/landing': typeof LandingRoute
  '/signup': typeof SignupRoute
  '/terms': typeof TermsRoute
  '/app/$orgId': typeof AppOrgIdRouteRouteWithChildren
  '/_marketing/pricing': typeof MarketingPricingRoute
  '/app/newOrg': typeof AppNewOrgRoute
  '/auth/_auth': typeof AuthAuthRouteWithChildren
  '/auth/authOptions': typeof AuthAuthOptionsRoute
  '/auth/confirmAccount': typeof AuthConfirmAccountRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/newAccount': typeof AuthNewAccountRoute
  '/_marketing/': typeof MarketingIndexRoute
  '/app/$orgId/settings': typeof AppOrgIdSettingsRoute
  '/auth/_auth/orgSelector': typeof AuthAuthOrgSelectorRoute
  '/app/$orgId/': typeof AppOrgIdIndexRoute
  '/app/$orgId/licensing/cancel': typeof AppOrgIdLicensingCancelRoute
  '/app/$orgId/licensing/enrolments': typeof AppOrgIdLicensingEnrolmentsRoute
  '/app/$orgId/licensing/purchase': typeof AppOrgIdLicensingPurchaseRouteWithChildren
  '/app/$orgId/licensing/success': typeof AppOrgIdLicensingSuccessRoute
  '/app/$orgId/users/$userid': typeof AppOrgIdUsersUseridRoute
  '/app/$orgId/billing/': typeof AppOrgIdBillingIndexRoute
  '/app/$orgId/events/': typeof AppOrgIdEventsIndexRoute
  '/app/$orgId/licensing/': typeof AppOrgIdLicensingIndexRoute
  '/app/$orgId/users/': typeof AppOrgIdUsersIndexRoute
  '/app/$orgId/billing/po/$poId': typeof AppOrgIdBillingPoPoIdRoute
  '/app/$orgId/licensing/license/$licenseId': typeof AppOrgIdLicensingLicenseLicenseIdRoute
  '/app/$orgId/events/$eventId/': typeof AppOrgIdEventsEventIdIndexRoute
  '/app/$orgId/licensing/purchase/': typeof AppOrgIdLicensingPurchaseIndexRoute
  '/app/$orgId/events/$eventId/attendees/$attendeeId': typeof AppOrgIdEventsEventIdAttendeesAttendeeIdRouteWithChildren
  '/app/$orgId/licensing/purchase/sku/$skuId': typeof AppOrgIdLicensingPurchaseSkuSkuIdRoute
  '/app/$orgId/events/$eventId/attendees/$attendeeId/assign': typeof AppOrgIdEventsEventIdAttendeesAttendeeIdAssignRoute
  '/app/$orgId/events/$eventId/attendees/$attendeeId/': typeof AppOrgIdEventsEventIdAttendeesAttendeeIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/app'
    | '/auth'
    | '/landing'
    | '/signup'
    | '/terms'
    | '/app/$orgId'
    | '/pricing'
    | '/app/newOrg'
    | '/auth/authOptions'
    | '/auth/confirmAccount'
    | '/auth/login'
    | '/auth/newAccount'
    | '/'
    | '/app/$orgId/settings'
    | '/auth/orgSelector'
    | '/app/$orgId/'
    | '/app/$orgId/licensing/cancel'
    | '/app/$orgId/licensing/enrolments'
    | '/app/$orgId/licensing/purchase'
    | '/app/$orgId/licensing/success'
    | '/app/$orgId/users/$userid'
    | '/app/$orgId/billing'
    | '/app/$orgId/events'
    | '/app/$orgId/licensing'
    | '/app/$orgId/users'
    | '/app/$orgId/billing/po/$poId'
    | '/app/$orgId/licensing/license/$licenseId'
    | '/app/$orgId/events/$eventId'
    | '/app/$orgId/licensing/purchase/'
    | '/app/$orgId/events/$eventId/attendees/$attendeeId'
    | '/app/$orgId/licensing/purchase/sku/$skuId'
    | '/app/$orgId/events/$eventId/attendees/$attendeeId/assign'
    | '/app/$orgId/events/$eventId/attendees/$attendeeId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/app'
    | '/auth'
    | '/landing'
    | '/signup'
    | '/terms'
    | '/pricing'
    | '/app/newOrg'
    | '/auth/authOptions'
    | '/auth/confirmAccount'
    | '/auth/login'
    | '/auth/newAccount'
    | '/'
    | '/app/$orgId/settings'
    | '/auth/orgSelector'
    | '/app/$orgId'
    | '/app/$orgId/licensing/cancel'
    | '/app/$orgId/licensing/enrolments'
    | '/app/$orgId/licensing/success'
    | '/app/$orgId/users/$userid'
    | '/app/$orgId/billing'
    | '/app/$orgId/events'
    | '/app/$orgId/licensing'
    | '/app/$orgId/users'
    | '/app/$orgId/billing/po/$poId'
    | '/app/$orgId/licensing/license/$licenseId'
    | '/app/$orgId/events/$eventId'
    | '/app/$orgId/licensing/purchase'
    | '/app/$orgId/licensing/purchase/sku/$skuId'
    | '/app/$orgId/events/$eventId/attendees/$attendeeId/assign'
    | '/app/$orgId/events/$eventId/attendees/$attendeeId'
  id:
    | '__root__'
    | '/_marketing'
    | '/app'
    | '/auth'
    | '/landing'
    | '/signup'
    | '/terms'
    | '/app/$orgId'
    | '/_marketing/pricing'
    | '/app/newOrg'
    | '/auth/_auth'
    | '/auth/authOptions'
    | '/auth/confirmAccount'
    | '/auth/login'
    | '/auth/newAccount'
    | '/_marketing/'
    | '/app/$orgId/settings'
    | '/auth/_auth/orgSelector'
    | '/app/$orgId/'
    | '/app/$orgId/licensing/cancel'
    | '/app/$orgId/licensing/enrolments'
    | '/app/$orgId/licensing/purchase'
    | '/app/$orgId/licensing/success'
    | '/app/$orgId/users/$userid'
    | '/app/$orgId/billing/'
    | '/app/$orgId/events/'
    | '/app/$orgId/licensing/'
    | '/app/$orgId/users/'
    | '/app/$orgId/billing/po/$poId'
    | '/app/$orgId/licensing/license/$licenseId'
    | '/app/$orgId/events/$eventId/'
    | '/app/$orgId/licensing/purchase/'
    | '/app/$orgId/events/$eventId/attendees/$attendeeId'
    | '/app/$orgId/licensing/purchase/sku/$skuId'
    | '/app/$orgId/events/$eventId/attendees/$attendeeId/assign'
    | '/app/$orgId/events/$eventId/attendees/$attendeeId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  MarketingRouteRoute: typeof MarketingRouteRouteWithChildren
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  LandingRoute: typeof LandingRoute
  SignupRoute: typeof SignupRoute
  TermsRoute: typeof TermsRoute
}

const rootRouteChildren: RootRouteChildren = {
  MarketingRouteRoute: MarketingRouteRouteWithChildren,
  AppRouteRoute: AppRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  LandingRoute: LandingRoute,
  SignupRoute: SignupRoute,
  TermsRoute: TermsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_marketing",
        "/app",
        "/auth",
        "/landing",
        "/signup",
        "/terms"
      ]
    },
    "/_marketing": {
      "filePath": "_marketing/route.tsx",
      "children": [
        "/_marketing/pricing",
        "/_marketing/"
      ]
    },
    "/app": {
      "filePath": "app/route.tsx",
      "children": [
        "/app/$orgId",
        "/app/newOrg"
      ]
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/_auth",
        "/auth/authOptions",
        "/auth/confirmAccount",
        "/auth/login",
        "/auth/newAccount"
      ]
    },
    "/landing": {
      "filePath": "landing.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/terms": {
      "filePath": "terms.tsx"
    },
    "/app/$orgId": {
      "filePath": "app/$orgId/route.tsx",
      "parent": "/app",
      "children": [
        "/app/$orgId/settings",
        "/app/$orgId/",
        "/app/$orgId/licensing/cancel",
        "/app/$orgId/licensing/enrolments",
        "/app/$orgId/licensing/purchase",
        "/app/$orgId/licensing/success",
        "/app/$orgId/users/$userid",
        "/app/$orgId/billing/",
        "/app/$orgId/events/",
        "/app/$orgId/licensing/",
        "/app/$orgId/users/",
        "/app/$orgId/billing/po/$poId",
        "/app/$orgId/licensing/license/$licenseId",
        "/app/$orgId/events/$eventId/",
        "/app/$orgId/events/$eventId/attendees/$attendeeId"
      ]
    },
    "/_marketing/pricing": {
      "filePath": "_marketing/pricing.tsx",
      "parent": "/_marketing"
    },
    "/app/newOrg": {
      "filePath": "app/newOrg.tsx",
      "parent": "/app"
    },
    "/auth/_auth": {
      "filePath": "auth/_auth.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_auth/orgSelector"
      ]
    },
    "/auth/authOptions": {
      "filePath": "auth/authOptions.tsx",
      "parent": "/auth"
    },
    "/auth/confirmAccount": {
      "filePath": "auth/confirmAccount.tsx",
      "parent": "/auth"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx",
      "parent": "/auth"
    },
    "/auth/newAccount": {
      "filePath": "auth/newAccount.tsx",
      "parent": "/auth"
    },
    "/_marketing/": {
      "filePath": "_marketing/index.tsx",
      "parent": "/_marketing"
    },
    "/app/$orgId/settings": {
      "filePath": "app/$orgId/settings.tsx",
      "parent": "/app/$orgId"
    },
    "/auth/_auth/orgSelector": {
      "filePath": "auth/_auth.orgSelector.tsx",
      "parent": "/auth/_auth"
    },
    "/app/$orgId/": {
      "filePath": "app/$orgId/index.tsx",
      "parent": "/app/$orgId"
    },
    "/app/$orgId/licensing/cancel": {
      "filePath": "app/$orgId/licensing/cancel.tsx",
      "parent": "/app/$orgId"
    },
    "/app/$orgId/licensing/enrolments": {
      "filePath": "app/$orgId/licensing/enrolments.tsx",
      "parent": "/app/$orgId"
    },
    "/app/$orgId/licensing/purchase": {
      "filePath": "app/$orgId/licensing/purchase.tsx",
      "parent": "/app/$orgId",
      "children": [
        "/app/$orgId/licensing/purchase/",
        "/app/$orgId/licensing/purchase/sku/$skuId"
      ]
    },
    "/app/$orgId/licensing/success": {
      "filePath": "app/$orgId/licensing/success.tsx",
      "parent": "/app/$orgId"
    },
    "/app/$orgId/users/$userid": {
      "filePath": "app/$orgId/users/$userid.tsx",
      "parent": "/app/$orgId"
    },
    "/app/$orgId/billing/": {
      "filePath": "app/$orgId/billing/index.tsx",
      "parent": "/app/$orgId"
    },
    "/app/$orgId/events/": {
      "filePath": "app/$orgId/events/index.tsx",
      "parent": "/app/$orgId"
    },
    "/app/$orgId/licensing/": {
      "filePath": "app/$orgId/licensing/index.tsx",
      "parent": "/app/$orgId"
    },
    "/app/$orgId/users/": {
      "filePath": "app/$orgId/users/index.tsx",
      "parent": "/app/$orgId"
    },
    "/app/$orgId/billing/po/$poId": {
      "filePath": "app/$orgId/billing/po.$poId.tsx",
      "parent": "/app/$orgId"
    },
    "/app/$orgId/licensing/license/$licenseId": {
      "filePath": "app/$orgId/licensing/license.$licenseId.tsx",
      "parent": "/app/$orgId"
    },
    "/app/$orgId/events/$eventId/": {
      "filePath": "app/$orgId/events/$eventId.index.tsx",
      "parent": "/app/$orgId"
    },
    "/app/$orgId/licensing/purchase/": {
      "filePath": "app/$orgId/licensing/purchase.index.tsx",
      "parent": "/app/$orgId/licensing/purchase"
    },
    "/app/$orgId/events/$eventId/attendees/$attendeeId": {
      "filePath": "app/$orgId/events/$eventId.attendees.$attendeeId.tsx",
      "parent": "/app/$orgId",
      "children": [
        "/app/$orgId/events/$eventId/attendees/$attendeeId/assign",
        "/app/$orgId/events/$eventId/attendees/$attendeeId/"
      ]
    },
    "/app/$orgId/licensing/purchase/sku/$skuId": {
      "filePath": "app/$orgId/licensing/purchase.sku.$skuId.tsx",
      "parent": "/app/$orgId/licensing/purchase"
    },
    "/app/$orgId/events/$eventId/attendees/$attendeeId/assign": {
      "filePath": "app/$orgId/events/$eventId.attendees.$attendeeId.assign.tsx",
      "parent": "/app/$orgId/events/$eventId/attendees/$attendeeId"
    },
    "/app/$orgId/events/$eventId/attendees/$attendeeId/": {
      "filePath": "app/$orgId/events/$eventId.attendees.$attendeeId.index.tsx",
      "parent": "/app/$orgId/events/$eventId/attendees/$attendeeId"
    }
  }
}
ROUTE_MANIFEST_END */
