@import "tailwindcss";

@font-face {
  font-family: ligo;
  src: url(./public/Ligo.ttf);
}

body {
  margin: 0;
  font-family: "InterVariable", -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
    sans-serif;
  background-color: rgb(252 252 252);
  /* -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; */
  /* letter-spacing: max(calc(1px - .05em), 0em); */
  /* font-feature-settings:  'cv10' on, 'ss07' on; */
  font-feature-settings: 'cv10'on;
  /* font-variation-settings: "opsz"32; */
}

/* 
body {
  user-select: none;
  -webkit-user-select: none;
  cursor: default;
} */

:root {
  /* font-size: 14px; */
  --radius-sm: 0.18rem;
  --radius-md: 0.23rem;
}

@theme {
  --border-width-hairline: 0.5px;
  --outline-width-hairline: 0.5px;
}

.font-medium {
  font-variation-settings: "wght"500;
}

.font-semibold {
  font-variation-settings: "wght"600;
}

.font-bold {
  font-variation-settings: "wght"700;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
    monospace;
}

@utility ribbed {
  position: relative;
  display: block;

  &::after {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 0;
    background: repeating-linear-gradient(to right, black 0px, white 1px, black 2px);
    mix-blend-mode: color-dodge;
    z-index: 10;
  }
}

@utility button-sunk {
  position: relative;
  overflow: hidden;

  --strength_: var(--strength, 1);
  box-shadow:
    0px 0.5px 0px 0px rgba(0, 0, 0, calc(0.30 * var(--strength_, 1))) inset,
    0.5px 2px 0px 0px rgba(0, 0, 0, calc(0.30 * var(--strength_, 1))) inset,
    -0.5px 2px 0px 0px rgba(0, 0, 0, calc(0.30 * var(--strength_, 1))) inset;

  &:after {
    position: absolute;
    inset: 0;
    content: "";
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, black, rgb(200 200 200));
    opacity: var(--overlay-strength, 0.3);
  }
}

@utility button-contrast {
  line-height: 1;
  font-weight: 600;
  background: black;
  color: white;
  appearance: none;
  --overlay-strength: 0.15;
  --strength: 3;

  @media (hover: hover) {
    &:hover:not(:active) {
      outline: 1px solid color-mix(in oklab, currentColor 30%, transparent);
      outline-offset: -2px;
    }
  }

  &:active {
    padding-top: 0.5px;
    background: rgb(55 55 55);
  }

}

@utility focus-ring {
  outline: 2px solid currentColor;
  outline-offset: -3px;
  outline-color: currentColor;
  outline-style: dashed;
}

@utility mesh-light {
  mask-image:
    linear-gradient(to bottom, black, black),
    url('data:image/svg+xml,<svg width="6" height="6" viewBox="0 0 6 6" fill="none" xmlns="http://www.w3.org/2000/svg"><rect opacity="0.9" width="1.5" height="1.5" fill="%23D9D9D977"/><rect opacity="0.9" x="3" y="3" width="1.5" height="1.5" fill="%23D9D9D977"/></svg>');
  mask-composite: subtract;
  mask-size: 3px;
}

@utility mesh-normal {
  mask-image:
    linear-gradient(to bottom, black, black),
    url('data:image/svg+xml,<svg width="6" height="6" viewBox="0 0 6 6" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="2" height="2" fill="%23D9D9D977"/><rect x="3" y="3" width="2" height="2" fill="%23D9D9D977"/></svg>');
  mask-composite: subtract;
  mask-size: 3px;
}

@utility mesh-leave-top {
  mask-image: linear-gradient(to bottom, black 0px, black 2px, rgb(0 0 0 / 80%) 2px);
}

@utility mesh-cut-top {
  mask-image: linear-gradient(to bottom, rgb(0 0 0 / 80%) 2px, black 2px);
}